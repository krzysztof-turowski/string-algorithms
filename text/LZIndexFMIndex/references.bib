@article{KMP,
    author = {Knuth, Donald E. and Morris, Jr., James H. and Pratt, Vaughan R.},
    title = {Fast Pattern Matching in Strings},
    journal = {SIAM Journal on Computing},
    volume = {6},
    number = {2},
    pages = {323-350},
    year = {1977},
    doi = {10.1137/0206024},
    URL = {https://doi.org/10.1137/0206024}
}

@article{SuffixArray,
    author = {Manber Udi and Myers Gene},
    title = {Suffix arrays: a new method for on-line string searches},
    journal = {First Annual ACM-SIAM Symposium on Discrete Algorithms},
    year = {1990},
    pages = {319–327}
}

@article{KMR,
    author = {Karp, Richard M. and Miller, Raymond E. and Rosenberg, Arnold L.},
    title = {Rapid identification of repeated patterns in strings, trees and arrays},
    journal = {Proceedings of the 4th Annual ACM Symposium on Theory of Computing},
    year = {1972},
    pages = {125-136}
}


@article{KS,
    author = {Kärkkäinen, Juha and Sanders, Peter},
    title = {Simple Linear Work Suffix Array Construction},
    journal = {Automata, Languages and Programming},
    year = 2003,
    volume = {2719},
    doi = {10.1007/3-540-45061-0_73},
    URL = {https://doi.org/10.1007/3-540-45061-0_73}
}

@article{SuffixArrayImage,
    author = {Li, Guanhua and Wu, Yijian and Roy, Chanchal and Sun, Jun and Peng, Xin and Zhan, Nanjie and Hu, Bin and Ma, Jingyi},
    title = {SAGA: Efficient and Large-Scale Detection of Near-Miss Clones with GPU Acceleration},
    pages = {272-283},
    year = {2020},
    doi = {10.1109/SANER48275.2020.9054832},
    URL = {https://doi.org/10.1109/SANER48275.2020.9054832}
}

@article{Chazelle,
  title={A Functional Approach to Data Structures and Its Use in Multidimensional Searching},
  author={Bernard Chazelle},
  journal={SIAM J. Comput.},
  year={1988},
  volume={17},
  pages={427-462},
  url={https://api.semanticscholar.org/CorpusID:3209902}
}

@book{cormenSufixArray,
  title={Introduction to Algorithms, fourth edition},
  author={Cormen, T.H. and Leiserson, C.E. and Rivest, R.L. and Stein, C.},
  isbn={9780262046305},
  lccn={2021037260},
  url={https://books.google.pl/books?id=HOJyzgEACAAJ},
  year={2022},
  publisher={MIT Press}
}

@article{twoWayAlgo,
author = {Crochemore, Maxime and Perrin, Dominique},
title = {Two-way string-matching},
year = {1991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {38},
number = {3},
issn = {0004-5411},
url = {https://doi.org/10.1145/116825.116845},
doi = {10.1145/116825.116845},
journal = {J. ACM},
month = {07},
pages = {650–674},
numpages = {25},
keywords = {text processing, pattern matching, combinatorial algorithms, analysis of algorithms}
}
@article{rabinKarp,
  doi = {10.1147/rd.312.0249},
  url = {https://doi.org/10.1147/rd.312.0249},
  year = {1987},
  month = mar,
  publisher = {{IBM}},
  volume = {31},
  number = {2},
  pages = {249--260},
  author = {Richard M. Karp and Michael O. Rabin},
  title = {Efficient randomized pattern-matching algorithms},
  journal = {{IBM} Journal of Research and Development}
}

@article{radixSort,
author = {Davis, Ian},
year = {1992},
month = {12},
pages = {636-642},
title = {A Fast Radix Sort.},
volume = {35},
journal = {Comput. J.},
doi = {10.1093/comjnl/35.6.636}
}

@article{LS,
title = {Faster suffix sorting},
journal = {Theoretical Computer Science},
volume = {387},
number = {3},
pages = {258-272},
year = {2007},
note = {The Burrows-Wheeler Transform},
issn = {0304-3975},
doi = {https://doi.org/10.1016/j.tcs.2007.07.017},
url = {https://www.sciencedirect.com/science/article/pii/S0304397507005257},
author = {N. Jesper Larsson and Kunihiko Sadakane},
keywords = {Suffix arrays, Burrows–Wheeler transform},
abstract = {We propose a fast and memory-efficient algorithm for lexicographically sorting the suffixes of a string, a problem that has important applications in data compression as well as string matching. Our algorithm eliminates much of the overhead of previous specialized approaches while maintaining their robustness for degenerate inputs. For input size n, our algorithm operates in only two integer arrays of size n, and has worst-case time complexity O(nlogn). We demonstrate experimentally that our algorithm has stable performance compared with other approaches.}
}

@INPROCEEDINGS{SA-IS,
  author={Nong, Ge and Zhang, Sen and Chan, Wai Hong},
  booktitle={2009 Data Compression Conference}, 
  title={Linear Suffix Array Construction by Almost Pure Induced-Sorting}, 
  year={2009},
  volume={},
  number={},
  pages={193-202},
  keywords={Sorting;Educational institutions;Algorithm design and analysis;Data compression;Computer science;Sun;Mathematics;Data structures;Indexing;Information retrieval;Suffix array;linear time;divide-and-conquer;algorithm design},
  doi={10.1109/DCC.2009.42}}

@article{suffixTree,
title = "Optimal suffix tree construction with large alphabets",
author = "Martin Farach",
year = "1997",
language = "English (US)",
pages = "137--143",
journal = "Annual Symposium on Foundations of Computer Science - Proceedings",
issn = "0272-5428",
note = "Proceedings of the 1997 38th IEEE Annual Symposium on Foundations of Computer Science ; Conference date: 20-10-1997 Through 22-10-1997",
abstract = "The suffix tree of a string is the fundamental data structure of combinatorial pattern matching. Weiner, who introduced the data structure, gave an O(n)-time algorithm for building the suffix tree of an n-character string drawn from a constant size alphabet. In the comparison model, there is a trivial Ω(n log n)-time lower bound based on sorting, and Weiner's algorithm matches this bound trivially. For integer alphabets, a substantial gap remains between the known upper and lower bounds, and closing this gap is the main open question in the construction of suffix trees. There is no super-linear lower bound, and the fastest known algorithm was the O(n log n) time comparison based algorithm. We settle this open problem by closing the gap: we build suffix trees in linear time for integer alphabet.",
}

@article{stringSearchingUsage,
author = {Kapil, Kumar and Soni, Rohit and Vyas, Amit and Sinhal, Dr. Amit},
year = {2014},
month = {07},
pages = {2319-7242},
title = {Importance of String Matching in Real World Problems},
volume = {3}
}

@InProceedings{RMQ1,
author="Bender, Michael A.
and Farach-Colton, Mart{\'i}n",
editor="Gonnet, Gaston H.
and Viola, Alfredo",
title="The LCA Problem Revisited",
booktitle="LATIN 2000: Theoretical Informatics",
year="2000",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="88--94",
abstract="We present a very simple algorithm for the Least Common Ancestors problem. We thus dispel the frequently held notion that optimal LCA computation is unwieldy and unimplementable. Interestingly, this algorithm is a sequentialization of a previously known PRAM algorithm.",
isbn="978-3-540-46415-0"
}
@misc{SegmentTreeRMQ,
  author       = "Richard Zhan",
  title        = "Segment Trees",
  month        = "11",
  year         = "2019",
  note = "Lecture notes",
  url = "https://activities.tjhsst.edu/sct/lectures/1920/2019_11_15_Segment_Trees.pdf"
}

@misc{entropyProof,
    author = "Michel Goemans",
    month = "04",
    year = "2015",
    url = "https://math.mit.edu/~goemans/18310S15/lempel-ziv-notes.pdf",
    title = "MIT lecture notes about LZ compressions"
}

@ARTICLE{LZ78,
  author={Lempel, A. and Ziv, J.},
  journal={IEEE Transactions on Information Theory}, 
  title={Compression of individual sequences via variable-rate coding}, 
  year={1978},
  volume={24},
  number={5},
  pages={530-536},
  keywords={},
  doi={10.1109/TIT.1978.1055934}
}

@ARTICLE{LZW,
  author={Terry, Welch A.},
  journal={Computer}, 
  title={A Technique for High-Performance Data Compression}, 
  year={1984},
  volume={17},
  number={6},
  pages={8-19},
  keywords={Data compression;Image coding;Compression algorithms;Programming profession;Data structures;Encoding;Runtime;System performance},
  doi={10.1109/MC.1984.1659158}
}

@article{LZIndex,
    title = {Indexing text using the Ziv–Lempel trie},
    journal = {Journal of Discrete Algorithms},
    volume = {2},
    number = {1},
    pages = {87-114},
    year = {2004},
    note = {The 9th International Symposium on String Processing and Information Retrieval},
    issn = {1570-8667},
    doi = {https://doi.org/10.1016/S1570-8667(03)00066-2},
    url = {https://www.sciencedirect.com/science/article/pii/S1570866703000662},
    author = {Gonzalo Navarro},
    keywords = {Self-indexing, Compressed text, Compressed pattern matching, Succinct data structures},
    abstract = {Let a text of u characters over an alphabet of size σ be compressible to n phrases by the LZ78 algorithm. We show how to build a data structure based on the Ziv–Lempel trie, called the LZ-index, that takes 4nlog2n(1+o(1)) bits of space (that is, 4 times the entropy of the text for ergodic sources) and reports the R occurrences of a pattern of length m in worst case time O(m3logσ+(m+R)logn). We present a practical implementation of the LZ-index, which is faster than current alternatives when we take into consideration the time to report the positions or text contexts of the occurrences found.}
}


@article{FMIndex,
    author = {Ferragina, Paolo and Manzini, Giovanni},
    title = {Indexing compressed text},
    year = {2005},
    volume = {52},
    number = {4},
    url = {https://doi.org/10.1145/1082036.1082039},
    doi = {10.1145/1082036.1082039},
    journal = {Journal of the ACM},
    pages = {552–581}
}

@article{stringSearchingDef,
    author = {Baeza-Yates, Ricardo},
    year = {1989},
    month = {04},
    pages = {34-58},
    title = {Algorithms for string searching},
    volume = {23},
    journal = {ACM SIGIR Forum},
    doi = {10.1145/74697.74700}
}

@article{missMatch,
author = {Nicolae, Marius and Rajasekaran, Sanguthevar},
year = {2013},
month = {07},
title = {On String Matching with Mismatches},
volume = {8},
journal = {Algorithms},
doi = {10.3390/a8020248}
}

@book{multiString,
author = {Crochemore, Maxime and Lecroq, Thierry},
year = {2016},
title = {Multiple String Matching}
}

@article{wildcardsMatch,
author = {Clifford, Peter and Clifford, Raphael},
year = {2007},
month = {01},
pages = {53-54},
title = {Simple deterministic wildcard matching},
volume = {101},
journal = {Inf. Process. Lett.},
doi = {10.1016/j.ipl.2006.08.002}
}

@inproceedings{Gusfield1997AlgorithmsOS,
  title={Algorithms on Strings, Trees, and Sequences - Computer Science and Computational Biology},
  author={Dan Gusfield},
  year={1997},
  url={https://api.semanticscholar.org/CorpusID:61800864}
}